version: '3.5'

services:
  main-app:
    image: lite-note-app
    build:
      context: .
      dockerfile: docker/app/Dockerfile
    container_name: lite-note-backend-api
    environment:
      - DATABASE_URL=mongodb://${DB_USER}:${DB_PASSWORD}@db/liteNote?replicaSet=rs0&authSource=admin
      - CORS_ORIGINS=${CORS_ORIGINS}
      - JWT_REFRESH_SECRET=${JWT_REFRESH_SECRET}
      - JWT_SECRET=${JWT_SECRET}
      - COOKIE_SECRET=${COOKIE_SECRET}
      - SERVER_PORT=${SERVER_PORT}
      - NODE_ENV=production
      - DEFAULT_API_VERSION=${DEFAULT_API_VERSION}
    expose:
      - ${SERVER_PORT}
    ports:
      - target: ${SERVER_PORT}
        published: 65534
        protocol: tcp
        mode: host
    networks:
      - network_1
    restart: always
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: curl --fail http://main-app:${SERVER_PORT} || exit 1
      interval: 1m30s
      timeout: 5s
      retries: 3
      start_period: 5s

  db:
    image: lite-note-db
    build:
      context: .
      dockerfile: docker/db/Dockerfile
    container_name: lite-note-backend-db
    environment:
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOSTNAME=db
    volumes:
      - db-data:/data/db:rw
      - db-config:/data/configdb:rw
    networks:
      - network_1
    restart: always
    healthcheck:
      test:  mongosh --eval "db.stats().ok" --quiet
      interval: 1m30s
      timeout: 5s
      retries: 5
      start_period: 10s

volumes:
  db-data:
  db-config:

networks:
  network_1:
    ipam:
      driver: default
      config:
        - subnet: "10.10.10.0/29"